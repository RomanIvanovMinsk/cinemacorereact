// <auto-generated />
using System;
using CinemaCporeReactProject.DAL.Repositores;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaCporeReactProject.DAL.Migrations
{
    [DbContext(typeof(MoviesRepository))]
    [Migration("20190723134535_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaCporeReactProject.DAL.Models.Genere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MovieId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Genries");
                });

            modelBuilder.Entity("CinemaCporeReactProject.DAL.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImdbId");

                    b.Property<string>("OriginalTitle");

                    b.Property<string>("Overview");

                    b.Property<string>("Poster");

                    b.Property<string>("PosterFullUrl");

                    b.Property<int?>("RatingId");

                    b.Property<DateTime?>("ReleasedDate");

                    b.Property<int?>("RuntimeMinutes");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CinemaCporeReactProject.DAL.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageRating");

                    b.Property<int>("NumberVotes");

                    b.HasKey("Id");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("CinemaCporeReactProject.DAL.Models.Genere", b =>
                {
                    b.HasOne("CinemaCporeReactProject.DAL.Models.Movie")
                        .WithMany("Genere")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("CinemaCporeReactProject.DAL.Models.Movie", b =>
                {
                    b.HasOne("CinemaCporeReactProject.DAL.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");
                });
#pragma warning restore 612, 618
        }
    }
}
